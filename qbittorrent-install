#!/bin/sh

set -e

QBIT_VERSION="4.5.2"
LIBTORRENT_VERSION="1.2.19"
ARCH=$(uname -m)

# === 架构判断 ===
if [ "$ARCH" = "x86_64" ]; then
    BINARY_URL="https://github.com/userdocs/qbittorrent-nox-static/releases/download/release-${QBIT_VERSION}_v${LIBTORRENT_VERSION}/x86_64-qt5-qbittorrent-nox"
elif echo "$ARCH" | grep -qE '^aarch64|armv7'; then
    echo "⚠️ 暂不支持 ARM 架构的静态二进制下载链接，请手动替换 BINARY_URL。"
    exit 1
else
    echo "❌ 未知或不支持的架构: $ARCH"
    exit 1
fi

# === 安装必要依赖 ===
apk add --no-cache bash wget curl shadow openrc su-exec

# === 确认 su-exec 路径 ===
SUEXEC=$(which su-exec)

# === 创建用户和下载目录 ===
addgroup -S qbittorrent || true
adduser -S -G qbittorrent qbittorrent || true
mkdir -p /opt/qbittorrent /opt/qbittorrent/downloads
chown -R qbittorrent:qbittorrent /opt/qbittorrent

# === 下载 qBittorrent-nox 静态版本 ===
cd /opt/qbittorrent
wget -O qbittorrent-nox "$BINARY_URL"
chmod +x qbittorrent-nox
chown qbittorrent:qbittorrent qbittorrent-nox

# === 初始化配置目录（~/.config/qBittorrent） ===
echo "🛠️ 初始化配置..."
$SUEXEC qbittorrent ./qbittorrent-nox & 
sleep 3
pkill -f qbittorrent-nox || true

# === 创建 OpenRC 启动服务 ===
cat << EOF > /etc/init.d/qbittorrent
#!/sbin/openrc-run

name="qbittorrent"
description="qBittorrent Daemon"

command="$SUEXEC"
command_args="qbittorrent /opt/qbittorrent/qbittorrent-nox"
command_background=true
pidfile="/run/\${RC_SVCNAME}.pid"

depend() {
    need net
    before local
}

start_pre() {
    checkpath --directory --mode 0755 /run/qbittorrent
}

stop_post() {
    rm -f /run/\${RC_SVCNAME}.pid
}
EOF

chmod +x /etc/init.d/qbittorrent
rc-update add qbittorrent default
rc-service qbittorrent start

sleep 1
rc-service qbittorrent status

# === 提示访问方式 ===
echo "✅ qBittorrent 安装完成"
echo "📁 下载目录：/opt/qbittorrent/downloads"
echo "🌐 Web 界面：http://<你的公网IP>:8080"
echo "🔐 默认用户名：admin"
echo "🔐 默认密码：adminadmin"
